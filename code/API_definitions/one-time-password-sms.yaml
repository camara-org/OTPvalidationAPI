openapi: 3.0.3
info:
  title: One Time Password SMS
  description: |-
    Service Enabling Network Function API to send short-lived OTPs (one time passwords) to a phone number via SMS and validate it afterwards, in order to verify the phone number as a proof of possession.

    # Relevant  Definitions and concepts
    - **NaaS**: *Network-as-a-Service* model where Telco Network resources are exposed to third parties through APIs. In this particular API, One Time Password is exposed following this model. 
    - **OTP**: *One Time password* is a one-time authorization code (OTAC) that is valid for only one login session or transaction.

    # API Functionality 
    It enables a Service Provider (SP) to send an OTP code by SMS and validate it to verify the phone number (MSISDN) as a proof of possession.

    # Resources and Operations overview
    This API currently provides two endpoints, one to send an OTP to a given phone number and another to validate the code received as input.
  version: 0.4.0
  termsOfService: http://example.com/terms/
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://{host}{basePath}
    variables:
      host:
        default: api.example.com
        description: Host that serves the API
      basePath:
        default: /one-time-password-sms/v0
        description: Base path for the one time password sms API
tags:
  - name: OTP Management
    description: API operations to manage OTP codes
paths:
  /send-code:
    post:
      tags:
        - OTP Management
      summary: Sends a message including an OTP code to the given phone number
      description: |-
        Sends an SMS with the desired message and an OTP code to the received phone number.
      operationId: sendCode
      parameters:
        - in: header
          name: x-correlator
          required: false
          description: Correlation id for the different services
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCodeBody'
        required: true
      responses:
        '200':
          description: OK
          headers:
            x-correlator:
              description: Correlation id for the different services
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCodeResponse'
        '400':
          $ref: '#/components/responses/InvalidArgument'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '403':
          $ref: '#/components/responses/SendCodeForbiddenError'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/Unavailable'
        '504':
          $ref: '#/components/responses/Timeout'
      security:
        - two_legged:
          - one-time-password-sms:send-validate
  /validate-code:
    post:
      tags:
        - OTP Management
      summary: Verifies the OTP received as input
      description: |-
        Verifies the code is valid for the received authentication_id
      operationId: validateCode
      parameters:
        - in: header
          name: x-correlator
          required: false
          description: Correlation id for the different services
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateCodeBody'
        required: true
      responses:
        '204':
          description: The OTP was successfully validated
          headers:
            x-correlator:
              description: Correlation id for the different services
              schema:
                type: string
        '400':
          $ref: '#/components/responses/ValidateCodeBadRequestError'
        '401':
          $ref: '#/components/responses/Unauthenticated'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/Internal'
        '503':
          $ref: '#/components/responses/Unavailable'
        '504':
          $ref: '#/components/responses/Timeout'
      security:
        - two_legged:
          - one-time-password-sms:send-validate
components:
  schemas:
    SendCodeBody:
      type: object
      properties:
        phone_number:
          $ref: '#/components/schemas/PhoneNumber'
        message:
          $ref: '#/components/schemas/Message'         
      required:
        - phone_number
        - message
    SendCodeResponse:
      type: object
      properties:
        authentication_id:
          $ref: '#/components/schemas/AuthenticationId'
      required:
        - authentication_id
    ValidateCodeBody:
      type: object
      properties:
        authentication_id:
          $ref: '#/components/schemas/AuthenticationId'
        code:
          $ref: '#/components/schemas/Code'
      required:
        - authentication_id
        - code
    PhoneNumber:
      description: A phone number belonging to the user. 'E164 with an optional +' format
      type: string
      pattern: '^\+?[0-9]{5,15}$'
      example: '+346661113334'
    Message:
      type: string
      description: Message template used to compose the content of the SMS sent to the phone number. It must include the following label indicating where to include the short code `{{code}}`
      pattern: .*\{\{code\}\}.*
      maxLength: 160
      example: '{{code}} is your short code to authenticate with Cool App via SMS'
    AuthenticationId:
      type: string
      description: unique id of the verification attempt the code belongs to.
      example: ea0840f3-3663-4149-bd10-c7c6b8912105
    Code:
      type: string
      description: temporal, short code to be validated
      example: AJY3
    ModelError:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: integer
          minimum: 400
          maximum: 599
          description: HTTP response status code
        message:
          type: string
          description: A human readable description of what the event represent
    SendCodeForbiddenError:
      allOf:
        - type: object
          required:
            - code
          properties:
            code:
              type: string
              enum:
                - PERMISSION_DENIED
                - ONE_TIME_PASSWORD_SMS.MAX_OTP_CODES_EXCEEDED
                - ONE_TIME_PASSWORD_SMS.PHONE_NUMBER_NOT_ALLOWED
                - ONE_TIME_PASSWORD_SMS.PHONE_NUMBER_BLOCKED
              default: PERMISSION_DENIED
              description: Client does not have sufficient permissions to perform this action.
        - $ref: '#/components/schemas/ModelError'
    ValidateCodeBadRequestError:
      allOf:
        - type: object
          required:
            - code
          properties:
            code:
              type: string
              enum:
                - INVALID_ARGUMENT
                - ONE_TIME_PASSWORD_SMS.VERIFICATION_EXPIRED
                - ONE_TIME_PASSWORD_SMS.VERIFICATION_FAILED
                - ONE_TIME_PASSWORD_SMS.INVALID_OTP
              default: INVALID_ARGUMENT
              description: Client specified an invalid argument, request body or query param.
        - $ref: '#/components/schemas/ModelError'
  securitySchemes:
    two_legged:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.example.com/token
          scopes:
            one-time-password-sms:send-validate: Permission to send OTP by SMS and to validate it  
  responses:
    InvalidArgument:
      description: Problem with the client request
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - INVALID_ARGUMENT
                    default: INVALID_ARGUMENT
                    description: Client specified an invalid argument, request body or query param.
              - $ref: '#/components/schemas/ModelError'
          examples:
            response:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param
    ValidateCodeBadRequestError:
      description: |-
        Problem with the client request. In addition to regular scenario of `INVALID_ARGUMENT`, another scenarios may exist:
          - Too many unsuccessful attempts (`{"code": "ONE_TIME_PASSWORD_SMS.VERIFICATION_FAILED","message": "The maximum number of attempts for this authentication_id was exceeded without providing a valid OTP"}`)
          - Expired authentication_id (`{"code": "ONE_TIME_PASSWORD_SMS.VERIFICATION_EXPIRED","message": "The authentication_id is no longer valid"}`)
          - OTP is not valid for the provided authentication_id (`{"code": "ONE_TIME_PASSWORD_SMS.INVALID_OTP","message": "The provided OTP is not valid for this authentication_id"}`)
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidateCodeBadRequestError'
          examples:
            response:
              value:
                status: 400
                code: ONE_TIME_PASSWORD_SMS.VERIFICATION_FAILED
                message: The maximum number of attempts for this authentication_id was exceeded without providing a valid OTP
    Unauthenticated:
      description: Authentication problem with the client request
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - UNAUTHENTICATED
                    default: UNAUTHENTICATED
                    description: Request not authenticated due to missing, invalid, or expired credentials.
              - $ref: '#/components/schemas/ModelError'
          examples:
            response:
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials
    PermissionDenied:
      description: Client does not have sufficient permission
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - PERMISSION_DENIED
                    default: PERMISSION_DENIED
                    description: Client does not have sufficient permissions to perform this action.
              - $ref: '#/components/schemas/ModelError'
          examples:
            response:
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action
    SendCodeForbiddenError:
      description: |-
        Client does not have sufficient permissions to perform this action.
        In addition to regular scenario of `PERMISSION_DENIED`, another scenarios may exist:
          - Too many code requests were sent (`{"code": "ONE_TIME_PASSWORD_SMS.MAX_OTP_CODES_EXCEEDED","message": "Too many OTPs have been requested for this MSISDN. Try later."}`)
          - The given phone_number can't receive an SMS due to business reasons in the operator, e.g. fraud, receiving SMS is not supported, etc (`{"code": "ONE_TIME_PASSWORD_SMS.PHONE_NUMBER_NOT_ALLOWED","message": "Phone_number can't receive an SMS due to business reasons in the operator."}`)
          - The given phone_number is blocked to receive SMS due to any blocking business reason in the operator (`{"code": "ONE_TIME_PASSWORD_SMS.PHONE_NUMBER_BLOCKED","message": "Phone_number is blocked to receive SMS due to any blocking business reason in the operator."}`)
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SendCodeForbiddenError'
          examples:
            response:
              value:
                status: 403
                code: ONE_TIME_PASSWORD_SMS.MAX_OTP_CODES_EXCEEDED
                message: Too many OTPs have been requested for this MSISDN. Try later.
    NotFound:
      description: Resource Not Found
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - NOT_FOUND
                    default: NOT_FOUND
                    description: The specified resource is not found
              - $ref: '#/components/schemas/ModelError'
          examples:
            response:
              value:
                status: 404
                code: NOT_FOUND
                message: A specified resource is not found
    MethodNotAllowed:
      description: The requested method is not allowed/supported on the target resource
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - METHOD_NOT_ALLOWED
                    default: METHOD_NOT_ALLOWED
                    description: The requested method is not allowed/supported on the target resource.
              - $ref: '#/components/schemas/ModelError'
          examples:
            response:
              value:
                status: 405
                code: METHOD_NOT_ALLOWED
                message: The requested method is not allowed/supported on the target resource
    NotAcceptable:
      description: The server can not produce a response matching the content
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - NOT_ACCEPTABLE
                    default: NOT_ACCEPTABLE
                    description: The server can't produce a response matching the content requested by the client through Accept-* headers.
              - $ref: '#/components/schemas/ModelError'
          examples:
            response:
              value:
                status: 406
                code: NOT_ACCEPTABLE
                message: The server can't produce a response matching the content requested by the client through Accept-* headers
    UnsupportedMediaType:
      description: The server refuses to accept the request because the payload format is in an unsupported format
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - UNSUPPORTED_MEDIA_TYPE
                    default: UNSUPPORTED_MEDIA_TYPE
                    description: The server refuses to accept the request because the payload format is in an unsupported format.
              - $ref: '#/components/schemas/ModelError'
          examples:
            response:
              value:
                status: 415
                code: UNSUPPORTED_MEDIA_TYPE
                message: The server refuses to accept the request because the payload format is in an unsupported format
    TooManyRequests:
      description: Either out of resource quota or reaching rate limiting
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - TOO_MANY_REQUESTS
                    default: TOO_MANY_REQUESTS
                    description: Either out of resource quota or reaching rate limiting.
              - $ref: '#/components/schemas/ModelError'
          examples:
            response:
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Either out of resource quota or reaching rate limiting
    Internal:
      description: Server error
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - INTERNAL
                    default: INTERNAL
                    description: Unknown server error.Typically a server bug.
              - $ref: '#/components/schemas/ModelError'
          examples:
            response:
              value:
                status: 500
                code: INTERNAL
                message: Server error
    Unavailable:
      description: Service unavailable. Typically the server is down.
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - UNAVAILABLE
                    default: UNAVAILABLE
                    description: Request timeout exceeded
              - $ref: '#/components/schemas/ModelError'
          examples:
            response:
              value:
                status: 503
                code: UNAVAILABLE
                message: Service unavailable
    Timeout:
      description: Request time exceeded. If it happens repeatedly, consider reducing the request complexity
      headers:
        x-correlator:
          description: Correlation id for the different services
          schema:
            type: string
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - code
                properties:
                  code:
                    type: string
                    enum:
                      - TIMEOUT
                    default: TIMEOUT
                    description: Request timeout exceeded
              - $ref: '#/components/schemas/ModelError'
          examples:
            response:
              value:
                status: 504
                code: TIMEOUT
                message: Request timeout exceeded. Try later.
externalDocs:
  description: Project documentation at CAMARA
  url: https://github.com/camaraproject/NumberVerificationSMS2FA
